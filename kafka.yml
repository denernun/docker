# https://github.com/confluentinc/cp-all-in-one/blob/7.2.1-post/cp-all-in-one-community/docker-compose.yml
#
version: "3"

networks:
  network:
    name: network
    driver: bridge

volumes:
  kafka:
    external: true
    name: kafka
  kafka-secrets:
    external: true
    name: kafka-secrets
  zookeeper-data:
    external: true
    name: zookeeper-data
  zookeeper-logs:
    external: true
    name: zookeeper-logs
  zookeeper-secrets:
    external: true
    name: zookeeper-secrets

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    restart: always
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ALLOW_ANONYMOUS_LOGIN: yes
    networks:
      - network
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-logs:/var/lib/zookeeper/log
      - zookeeper-secrets:/etc/zookeeper/secrets

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    restart: always
    environment:
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9092,OUTSIDE://:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://host.docker.internal:9094
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    ports:
      - '29092:29092'
      - '9092:9092'
      - '9094:9094'
    networks:
      - network
    volumes:
      - kafka:/var/lib/kafka/data
      - kafka-secrets:/etc/kafka/secrets

  control-center:
    image: confluentinc/cp-enterprise-control-center:latest
    hostname: control-center
    container_name: control-center
    depends_on:
      - kafka
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:9092'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
    networks:
      - network

    # schema-registry:
    #     image: confluentinc/cp-schema-registry:7.2.1
    #     hostname: schema-registry
    #     container_name: schema-registry
    #     depends_on:
    #       - broker
    #     ports:
    #       - "8081:8081"
    #     environment:
    #       SCHEMA_REGISTRY_HOST_NAME: schema-registry
    #       SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
    #       SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

    # connect:
    #   image: cnfldemos/kafka-connect-datagen:0.6.0-7.2.1
    #   hostname: connect
    #   container_name: connect
    #   depends_on:
    #     - broker
    #     - schema-registry
    #   ports:
    #     - "8083:8083"
    #   environment:
    #     CONNECT_BOOTSTRAP_SERVERS: 'broker:29092'
    #     CONNECT_REST_ADVERTISED_HOST_NAME: connect
    #     CONNECT_GROUP_ID: compose-connect-group
    #     CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
    #     CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
    #     CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
    #     CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
    #     CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
    #     CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
    #     CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
    #     CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
    #     CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
    #     CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    #     CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
    #     CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR

    # ksqldb-server:
    #   image: confluentinc/cp-ksqldb-server:7.2.1
    #   hostname: ksqldb-server
    #   container_name: ksqldb-server
    #   depends_on:
    #     - broker
    #     - connect
    #   ports:
    #     - "8088:8088"
    #   environment:
    #     KSQL_CONFIG_DIR: "/etc/ksql"
    #     KSQL_BOOTSTRAP_SERVERS: "broker:29092"
    #     KSQL_HOST_NAME: ksqldb-server
    #     KSQL_LISTENERS: "http://0.0.0.0:8088"
    #     KSQL_CACHE_MAX_BYTES_BUFFERING: 0
    #     KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
    #     KSQL_KSQL_CONNECT_URL: "http://connect:8083"
    #     KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
    #     KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
    #     KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'

    # ksqldb-cli:
    #   image: confluentinc/cp-ksqldb-cli:7.2.1
    #   container_name: ksqldb-cli
    #   depends_on:
    #     - broker
    #     - connect
    #     - ksqldb-server
    #   entrypoint: /bin/sh
    #   tty: true

    # ksql-datagen:
    #   image: confluentinc/ksqldb-examples:7.2.1
    #   hostname: ksql-datagen
    #   container_name: ksql-datagen
    #   depends_on:
    #     - ksqldb-server
    #     - broker
    #     - schema-registry
    #     - connect
    #   command: "bash -c 'echo Waiting for Kafka to be ready... && \
    #                      cub kafka-ready -b broker:29092 1 40 && \
    #                      echo Waiting for Confluent Schema Registry to be ready... && \
    #                      cub sr-ready schema-registry 8081 40 && \
    #                      echo Waiting a few seconds for topic creation to finish... && \
    #                      sleep 11 && \
    #                      tail -f /dev/null'"
    #   environment:
    #     KSQL_CONFIG_DIR: "/etc/ksql"
    #     STREAMS_BOOTSTRAP_SERVERS: broker:29092
    #     STREAMS_SCHEMA_REGISTRY_HOST: schema-registry
    #     STREAMS_SCHEMA_REGISTRY_PORT: 8081

    # rest-proxy:
    #   image: confluentinc/cp-kafka-rest:7.2.1
    #   depends_on:
    #     - broker
    #     - schema-registry
    #   ports:
    #     - 8082:8082
    #   hostname: rest-proxy
    #   container_name: rest-proxy
    #   environment:
    #     KAFKA_REST_HOST_NAME: rest-proxy
    #     KAFKA_REST_BOOTSTRAP_SERVERS: 'broker:29092'
    #     KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
    #     KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
